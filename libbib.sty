\NeedsTeXFormat{LaTeX2e}[1999/12/01]
\ProvidesPackage{libbib}[2015/07/16 v0.1 LaTeX/BibTeX library]
\RequirePackage{amsmath}
\RequirePackage{xparse}
\RequirePackage{mleftright}
\RequirePackage{mfirstuc-english}
\NewDocumentCommand{\libbib@capitalize}{m}{#1}
\PassOptionsToPackage{single}{acro}
\PassOptionsToPackage{label}{acro}
\PassOptionsToPackage{uc-cmd=\makefirstuc}{acro}
\RequirePackage{acro}
\RequirePackage{textcomp}
\RequirePackage{ifthen}
\PassOptionsToPackage{compress}{cleveref}
\RequirePackage{cleveref}
\DeclareOption{lncs}{%
  \RenewDocumentCommand{\libbib@capitalize}{m}{\capitalisewords{#1}}
  \let\Ac\ac
  \let\Acf\acf
  \let\Acl\acl
  \let\Acp\acp
  \let\Aclp\aclp
  \let\Acfp\acfp
  \crefname{chapter}{Chap.}{Chap.}
  \Crefname{chapter}{Chapter}{Chapters}
  \crefname{section}{Sect.}{Sect.}
  \Crefname{section}{Section}{Sections}
  \crefname{figure}{Fig.}{Fig.}
  \Crefname{figure}{Figure}{Figures}
  \crefname{table}{Tab.}{Tab.}
  \Crefname{table}{Table}{Tables}
  \crefname{definition}{Def.}{Def.}
  \Crefname{definition}{Definition}{Definitions}
  \crefname{theorem}{Thm.}{Thm.}
  \Crefname{theorem}{Theorem}{Theorems}
  \crefname{lemma}{Lem.}{Lem.}
  \Crefname{lemma}{Lemma}{Lemmas}
  \crefname{corollary}{Cor.}{Cor.}
  \Crefname{corollary}{Corollary}{Corollaries}
  \crefname{proposition}{Prop.}{Prop.}
  \Crefname{proposition}{Proposition}{Propositions}
}
\DeclareOption{stdmaths}{%
  % General maths
  %\ProvideDocumentCommand{\ord}{m}{\ensuremath{|#1|}}
  \DeclareMathOperator{\N}{\mathbb{N}}
  \DeclareMathOperator{\Z}{\mathbb{Z}}
  \DeclareMathOperator{\Q}{\mathbb{Q}}
  \DeclareMathOperator{\R}{\mathbb{R}}
  %\DeclareMathOperator{\C}{\mathbb{C}}
  \ProvideDocumentCommand{\textand}{}{\ensuremath{\qquad\text{and}\qquad}}
  \ProvideDocumentCommand{\Prob}{o o m}{\ensuremath{%
    \Pr%
    \IfValueT{#1}{\ifthenelse{\equal{#1}{}}{}{_{#1}}}%
    \IfValueT{#2}{^{#2}}%
    \mleft[%
      \ifthenelse{\equal{#3}{}}{\cdot}{#3}%
    \mright]%
  }}
}
\DeclareOption{algebra}{%
  % Galois fields (finite fields)
  \DeclareMathOperator{\GF}{\mathrm{GF}}
  \DeclareMathOperator{\F}{\mathbb{F}}
  \DeclareMathOperator{\ord}{ord}
  \ProvideDocumentCommand{\card}{m}{\ensuremath{|#1|}}
}
\DeclareOption{crypto}{%
  % General algorithmic parts
  \ProvideDocumentCommand{\Scheme}{s m o o}{\ensuremath{%
      \operatorname{%
        \IfBooleanTF{#1}{%
          \overline{{\mathsf{#2}}}%
        }{%
          {\mathsf{#2}}%
        }%
        \IfValueT{#3}{.\!\mathsf{#3}}%
      }%
      \IfValueT{#4}{\mleft( #4 \mright)}%
    }}
  \DeclareMathOperator{\K}{\mathcal{K}}
  \DeclareMathOperator{\M}{\mathcal{M}}
  \DeclareMathOperator{\C}{\mathcal{C}}
  \DeclareMathOperator{\E}{\mathcal{E}}
  \DeclareMathOperator{\D}{\mathcal{D}}
  \ProvideDocumentCommand{\indcpa}{}{\ensuremath{\text{IND-CPA}}}
  \ProvideDocumentCommand{\indcca}{}{\ensuremath{\text{IND-CCA}}}
  \ProvideDocumentCommand{\indsfcca}{}{\ensuremath{\text{IND-SFCCA}}}
  \ProvideDocumentCommand{\intptxt}{}{\ensuremath{\text{INT-PTXT}}}
  \ProvideDocumentCommand{\intctxt}{}{\ensuremath{\text{INT-CTXT}}}
  \ProvideDocumentCommand{\intsfctxt}{}{\ensuremath{\text{INT-SFCTXT}}}
  \ProvideDocumentCommand{\nmcpa}{}{\ensuremath{\text{NM-CPA}}}
  \ProvideDocumentCommand{\nmcca}{}{\ensuremath{\text{NM-CCA}}}
  \ProvideDocumentCommand{\sufcma}{}{\ensuremath{\text{SUF-CMA}}}
  \ProvideDocumentCommand{\denss}{}{\ensuremath{\text{DEN-SS}}}
  \ProvideDocumentCommand{\rgets}{}{\overset{\text{\textcent}}{\gets}}
  \DeclareMathOperator{\AdvOp}{\mathbf{Adv}}
  \ProvideDocumentCommand{\Adv}{m m o}{%
    \IfValueTF{#3}{%
      \ensuremath{\AdvOp^{#1}_{#2}\mleft( #3 \mright)}%
    }{%
      \ensuremath{\AdvOp^{#1}_{#2}\mleft( \cdot \mright)}%
    }%
  }
  \DeclareMathOperator{\ExpOp}{\mathbf{Exp}}
  \ProvideDocumentCommand{\Exp}{m m o}{%
    \IfValueTF{#3}{%
      \ensuremath{\ExpOp^{#1}_{#2}\mleft( #3 \mright)}%
    }{%
      \ensuremath{\ExpOp^{#1}_{#2}\mleft( \cdot \mright)}%
    }%
  }
  % Cryptographic functions
  % XXX Make all crypto functions commands
  \DeclareMathOperator{\GenOp}{\mathsf{Gen}}
  \ProvideDocumentCommand{\Gen}{s o m}{\ensuremath{%
    \IfBooleanTF{#1}{%
      \overline{\GenOp}%
      \IfValueT{#2}{^{#2}}%
      \ifthenelse{\equal{#3}{}}{}{\mleft(#3\mright)}%
    }{%
      \GenOp%
      \IfValueT{#2}{^{#2}}%
      \ifthenelse{\equal{#3}{}}{}{\mleft(#3\mright)}%
    }%
  }}
  \DeclareMathOperator{\SetupOp}{\mathsf{Setup}}
  \ProvideDocumentCommand{\Setup}{s o m}{\ensuremath{%
    \IfBooleanTF{#1}{%
      \overline{\SetupOp}%
      \IfValueT{#2}{^{#2}}%
      \ifthenelse{\equal{#3}{}}{}{\mleft(#3\mright)}%
    }{%
      \SetupOp%
      \IfValueT{#2}{^{#2}}%
      \ifthenelse{\equal{#3}{}}{}{\mleft(#3\mright)}%
    }
  }}
  \DeclareMathOperator{\KeygenOp}{\mathsf{Keygen}}
  \ProvideDocumentCommand{\Keygen}{s o m}{\ensuremath{%
    \IfBooleanTF{#1}{%
      \overline{\KeygenOp}%
      \IfValueT{#2}{^{#2}}%
      \ifthenelse{\equal{#3}{}}{}{\mleft(#3\mright)}%
    }{%
      \KeygenOp%
      \IfValueT{#2}{^{#2}}%
      \ifthenelse{\equal{#3}{}}{}{\mleft(#3\mright)}%
    }%
  }}
  \DeclareMathOperator{\SignOp}{\mathsf{Sign}}
  \ProvideDocumentCommand{\Sign}{s o o m}{\ensuremath{%
    \IfBooleanTF{#1}{%
      \overline{\SignOp}%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }{%
      \SignOp%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }%
  }}
  %\DeclareMathOperator{\Hash}{\mathsf{Hash}}
  \DeclareMathOperator{\MACOp}{\mathsf{MAC}}
  \ProvideDocumentCommand{\MAC}{s o o m}{\ensuremath{%
    \IfBooleanTF{#1}{%
      \overline{\MACOp}%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }{%
      \MACOp%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }%
  }}
  \DeclareMathOperator{\HMACOp}{\mathsf{HMAC}}
  \ProvideDocumentCommand{\HMAC}{s o o m}{\ensuremath{%
    \IfBooleanTF{#1}{%
      \overline{\HMACOp}%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mathopen{}\left(#4\right)\mathclose{}}%
    }{%
      \HMACOp%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mathopen{}\left(#4\right)\mathclose{}}%
    }%
  }}
  \DeclareMathOperator{\TagOp}{\mathsf{Tag}}
  \ProvideDocumentCommand{\Tag}{s o o m}{\ensuremath{%
    \IfBooleanTF{#1}{%
      \overline{\TagOp}%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }{%
      \TagOp%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }%
  }}
  \DeclareMathOperator{\VerifyOp}{\mathsf{Verify}}
  \ProvideDocumentCommand{\Verify}{s o o m}{\ensuremath{%
    \IfBooleanTF{#1}{%
      \overline{\VerifyOp}%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }{%
      \VerifyOp%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }%
  }}
  \DeclareMathOperator{\EncOp}{\mathsf{Enc}}
  \ProvideDocumentCommand{\Enc}{s o o m}{\ensuremath{%
    \IfBooleanTF{#1}{%
      \overline{\EncOp}%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }{%
      \EncOp%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }%
  }}
  \DeclareMathOperator{\DecOp}{\mathsf{Dec}}
  \ProvideDocumentCommand{\Dec}{s o o m}{\ensuremath{%
    \IfBooleanTF{#1}{%
      \overline{\DecOp}%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }{%
      \DecOp%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }%
  }}
  \DeclareMathOperator{\AuthEncOp}{\mathsf{AuthEnc}}
  \ProvideDocumentCommand{\AuthEnc}{s o o m}{\ensuremath{%
    \IfBooleanTF{#1}{%
      \overline{\AuthEncOp}%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }{%
      \AuthEncOp%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }%
  }}
  \DeclareMathOperator{\AuthDecOp}{\mathsf{AuthDec}}
  \ProvideDocumentCommand{\AuthDec}{s o o m}{\ensuremath{%
    \IfBooleanTF{#1}{%
      \overline{\AuthDecOp}%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }{%
      \AuthDecOp%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }%
  }}
  \DeclareMathOperator{\VerifDecOp}{\mathsf{AuthDec}}
  \ProvideDocumentCommand{\VerifDec}{s o o m}{\ensuremath{%
    \IfBooleanTF{#1}{%
      \overline{\VerifDecOp}%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }{%
      \VerifDecOp%
      \IfValueT{#2}{_{#2}}%
      \IfValueT{#3}{^{#3}}%
      \ifthenelse{\equal{#4}{}}{}{\mleft(#4\mright)}%
    }%
  }}
  % Cryptographic parts
  \ProvideDocumentCommand{\Key}{s m}{\ensuremath{%
    \IfBooleanT{#1}{\hat}k%
    %\IfValueT{#2}{^{#2}}%
    \ifthenelse{\equal{#2}{}}{}{_{#2}}%
  }}
  \ProvideDocumentCommand{\PubKey}{s m}{\ensuremath{%
    \IfBooleanT{#1}{\hat}k%
    \ifthenelse{\equal{#2}{}}{}{_{#2}}%
    ^{\mathsf{Pub}}%
  }}
  \ProvideDocumentCommand{\PriKey}{s m}{\ensuremath{%
    \IfBooleanT{#1}{\hat}k%
    \ifthenelse{\equal{#2}{}}{}{_{#2}}%
    ^{\mathsf{Pri}}%
  }}
  \ProvideDocumentCommand{\MACKey}{s m}{\ensuremath{%
    \IfBooleanT{#1}{\hat}k%
    \ifthenelse{\equal{#2}{}}{}{_{#2}}%
    ^{\mathsf{MA}}%
  }}
  \ProvideDocumentCommand{\TagKey}{s m}{\ensuremath{%
    \IfBooleanT{#1}{\hat}k%
    \ifthenelse{\equal{#2}{}}{}{_{#2}}%
    ^{\mathsf{MA}}%
  }}
  \ProvideDocumentCommand{\SignKey}{s m}{\ensuremath{%
    \IfBooleanT{#1}{\hat}s%
    \ifthenelse{\equal{#2}{}}{}{_{#2}}%
  }}
  \ProvideDocumentCommand{\VerifKey}{s m}{\ensuremath{%
    \IfBooleanT{#1}{\hat}v%
    \ifthenelse{\equal{#2}{}}{}{_{#2}}%
  }}
  % Crypto properties
  \DeclareAcronym{IND-CPA}{%
    short = {IND-CPA},
    long = {\libbib@capitalize{%
        indistinguishability under chosen-plaintext attack%
      }},
    cite = {AuthEncryption}
  }
  \DeclareAcronym{IND-CCA}{%
    short = {IND-CCA},
    long = {\libbib@capitalize{%
        indistinguishability under chosen-ciphertext attack%
      }},
    cite = {AuthEncryption}
  }
  \DeclareAcronym{IND-SFCCA}{%
    short = {IND-SFCCA},
    long = {\libbib@capitalize{%
        indistinguishability under statefully chosen-ciphertext attack%
      }},
    cite = {StatefulDecryption}
  }
  \DeclareAcronym{WUF-CMA}{%
    short = {WUF-CMA},
    long = {\libbib@capitalize{%
        weak unforgeability under chosen-message attack%
      }},
    cite = {AuthEncryption}
  }
  \DeclareAcronym{SUF-CMA}{%
    short = {SUF-CMA},
    long = {\libbib@capitalize{%
        strong unforgeability under chosen-message attack%
    }},
    cite = {AuthEncryption}
  }
  \DeclareAcronym{INT-PTXT}{%
    short = {INT-PTXT},
    long = {\libbib@capitalize{%
        integrity of plaintexts%
      }},
    cite = {AuthEncryption}
  }
  \DeclareAcronym{INT-SFPTXT}{%
    short = {INT-SFPTXT},
    long = {\libbib@capitalize{%
        integrity of stateful plaintexts%
      }},
    cite = {StatefulDecryption}
  }
  \DeclareAcronym{INT-CTXT}{%
    short = {INT-CTXT},
    long = {\libbib@capitalize{%
        integrity of ciphertexts%
      }},
    cite = {AuthEncryption}
  }
  \DeclareAcronym{INT-SFCTXT}{%
    short = {INT-SFCTXT},
    long = {\libbib@capitalize{%
        integrity of stateful ciphertexts%
      }},
    cite = {StatefulDecryption}
  }
  \DeclareAcronym{DEN-SS}{%
    short = {DEN-SS},
    long = {\libbib@capitalize{%
        deniability under surveillance-state attack%
      }},
    cite = {OTPKX}
  }
  % Computational problems
  \DeclareAcronym{DLP}{%
    short = {DLP},
    long = {Discrete Logarithm Problem}
  }
  \DeclareAcronym{DHP}{%
    short = {DHP},
    long = {Diffie-Hellman Problem}
  }
  \DeclareAcronym{DDH}{%
    short = {DDH},
    long = {Decisional Diffie-Hellman}
  }
  \DeclareAcronym{DC}{%
    short = {DC},
    long = {Dining Cryptographers},
    cite = {DiningCryptographers}
  }
  \DeclareAcronym{SMP}{%
    short = {SMP},
    long = {Socialist Millionaires' Problem}
  }
  % Cryptographic mechanisms
  \DeclareAcronym{OTP}{%
    short = {OTP},
    long = {One-Time Pad}
  }
  \DeclareAcronym{ZKP}{%
    short = {ZKP},
    long = {\libbib@capitalize{%
        zero-knowledge proof of knowledge%
      }}
  }
  \DeclareAcronym{MA}{%
    short = {MA},
    long = {\libbib@capitalize{%
        message authentication%
      }}
  }
  \DeclareAcronym{MAC}{%
    short = {MAC},
    long = {\libbib@capitalize{%
        message-authentication code%
      }}
  }
  \DeclareAcronym{HMAC}{%
    short = {HMAC},
    short-indefinite = {an},
    long = {\libbib@capitalize{%
        hash-based message-authentication code%
      }},
    long-indefinite = {a},
    cite = {HMAC},
  }
  \DeclareAcronym{PRP}{%
    short = {PRP},
    long = {\libbib@capitalize{%
        pseudo-random permutation%
      }}
  }
  \DeclareAcronym{PRF}{%
    short = {PRF},
    long = {\libbib@capitalize{%
        pseudo-random function%
      }}
  }
  \DeclareAcronym{PRNG}{%
    short = {PRNG},
    long = {\libbib@capitalize{%
        pseudo-random number generator%
      }}
  }
  \DeclareAcronym{RNG}{%
    short = {RNG},
    long = {\libbib@capitalize{%
        random-number generator%
      }}
  }
  \DeclareAcronym{KEM}{%
    short = {KEM},
    long = {\libbib@capitalize{%
        key-encapsulation mechanism%
      }}
  }
  \DeclareAcronym{DEM}{%
    short = {DEM},
    long = {\libbib@capitalize{%
        data-encryption mechanism%
      }}
  }
  \DeclareAcronym{EtM}{%
    short = {EtM},
    long = {\libbib@capitalize{%
        encrypt-then-MAC
      }},
    cite = {AuthEncryption}
  }
  \DeclareAcronym{PIR}{%
    short = {PIR},
    long = {\libbib@capitalize{%
        private information retrieval%
      }},
    %cite = {PIR}
  }
  \DeclareAcronym{OT}{%
    short = {OT},
    short-indefinite = {an},
    long = {\libbib@capitalize{%
        oblivious transfer%
      }},
    long-indefinite = {an},
    cite = {ObliviousTransfer}
  }
  % Key-exchange mechanisms
  \DeclareAcronym{KE}{%
    short = {KE},
    long = {\libbib@capitalize{%
        key-exchange%
      }}
  }
  \DeclareAcronym{DHKE}{%
    short = {DHKE},
    long = {\libbib@capitalize{%
        Diffie-Hellman key-exchange%
      }},
    cite = {DiffieHellman}
  }
  \DeclareAcronym{AKE}{%
    short = {AKE},
    long = {\libbib@capitalize{%
        authenticated key-exchange
      }},
    cite = {AuthKeyExchange}
  }
  % Cryptographic properties
  \DeclareAcronym{PFS}{%
    short = {PFS},
    long = {\libbib@capitalize{%
        perfect forward-secrecy%
      }}
  }
  % Types of encryption
  \DeclareAcronym{PKC}{%
    short = {PKC},
    long = {\libbib@capitalize{%
        public-key cryptography%
      }}
  }
  \DeclareAcronym{PKE}{%
    short = {PKE},
    long = {\libbib@capitalize{%
        public-key encryption%
      }}
  }
  \DeclareAcronym{SKE}{%
    short = {SKE},
    long = {\libbib@capitalize{%
        symmetric-key encryption%
      }}
  }
  \DeclareAcronym{BE}{%
    short = {BE},
    long = {\libbib@capitalize{%
        broadcast encryption%
      }},
    cite = {BroadcastEncryption}
  }
  \DeclareAcronym{ANOBE}{%
    short = {ANOBE},
    short-indefinite = {an},
    long = {\libbib@capitalize{%
        anonymous broadcast encryption%
      }},
    long-indefinite = {an},
    cite = {ANOBE}
  }
  \DeclareAcronym{oANOBE}{%
    short = {oANOBE},
    long = {\libbib@capitalize{%
        outsider-anonymous broadcast encryption%
      }},
    cite = {oANOBE}
  }
  \DeclareAcronym{IBE}{%
    short = {IBE},
    long = {\libbib@capitalize{%
        identity-based encryption%
      }}
  }
  \DeclareAcronym{ABE}{%
    short = {ABE},
    long = {\libbib@capitalize{%
        attribute-based encryption%
      }},
    short-indefinite = {an},
    long-indefinite = {an},
  }
  \DeclareAcronym{CP-ABE}{%
    short = {CP-ABE},
    long = {\libbib@capitalize{%
        ciphertext-policy attribute-based encryption%
      }},
    cite = {CP-ABE}
  }
  \DeclareAcronym{KP-ABE}{%
    short = {KP-ABE},
    long = {\libbib@capitalize{%
        key-policy attribute-based encryption%
      }},
    cite = {KP-ABE},
  }
  \DeclareAcronym{PE}{%
    short = {PE},
    long = {\libbib@capitalize{%
        predicate encryption%
      }}
  }
  \DeclareAcronym{PRE}{%
    short = {PRE},
    long = {\libbib@capitalize{%
        proxy re-encryption%
      }},
    cite = {AtomicProxyCrypto}
  }
  \DeclareAcronym{FHE}{%
    short = {FHE},
    long = {\libbib@capitalize{%
        fully homomorphic encryption%
      }},
  }
  \DeclareAcronym{SHE}{%
    short = {SHE},
    long = {\libbib@capitalize{%
        somewhat homomorphic encryption%
      }},
  }
  % Protocols
  \DeclareAcronym{OTR}{%
    short = {OTR},
    long = {Off-the-Record},
    cite = {otr2004}
  }
}
\DeclareOption{ac}{%
  \DeclareAcronym{AC}{%
    short = {AC},
    long = {\libbib@capitalize{%
        access control%
      }},
    short-indefinite = {an},
    long-indefinite = {an},
  }
  % Access Control Models
  \DeclareAcronym{IBAC}{%
    short = {IBAC},
    long = {\libbib@capitalize{%
        identity-based access control%
      }},
    short-indefinite = {an},
    long-indefinite = {an},
  }
  \DeclareAcronym{ABAC}{%
    short = {ABAC},
    long = {\libbib@capitalize{%
        attribute-based access control%
      }},
    short-indefinite = {an},
    long-indefinite = {an},
  }
  \DeclareAcronym{RBAC}{%
    short = {RBAC},
    long = {\libbib@capitalize{%
        role-based access control%
      }},
    short-indefinite = {an},
    long-indefinite = {a},
  }
  \DeclareAcronym{DAC}{%
    short = {DAC},
    long = {\libbib@capitalize{%
        discretionary access control%
      }}
  }
  \DeclareAcronym{acMAC}{%
    short = {MAC},
    long = {\libbib@capitalize{%
        mandatory access control%
      }}
  }
  % Access control objects
  \DeclareAcronym{ACL}{%
    short = {ACL},
    long = {\libbib@capitalize{%
        access control list%
      }},
    short-indefinite = {an},
    long-indefinite = {an},
  }
}
\DeclareOption{auth}{%
  \DeclareAcronym{eID}{%
    short = {eID},
    short-indefinite = {an},
    long = {\libbib@capitalize{%
        electronic ID%
      }},
    long-indefinite = {an},
  }
  \DeclareAcronym{PKI}{%
    short = {PKI},
    long = {\libbib@capitalize{%
        public-key infrastructure%
      }},
  }
  \DeclareAcronym{CA}{%
    short = {CA},
    long = {\libbib@capitalize{%
        certificate authority%
      }},
  }
}
\DeclareOption{location}{%
  \DeclareAcronym{PROPS}{%
    short = {PROPS},
    long = {PRivacy-preserving lOcation-Proof System},
    cite = {PROPS},
  }
  \DeclareAcronym{LP}{%
    short = {LP},
    short-indefinite = {an},
    long = {\libbib@capitalize{%
        location proof%
      }},
    long-indefinite = {a},
  }
  \DeclareAcronym{LPS}{%
    short = {LPS},
    short-indefinite = {an},
    long = {\libbib@capitalize{%
        location-proof share%
      }},
    long-indefinite = {a},
  }
}
\DeclareOption{mpc}{%
  \DeclareAcronym{MPC}{%
    short = {MPC},
    short-indefinite = {an},
    long = {\libbib@capitalize{%
        secure multiparty computation%
      }},
    long-indefinite = {a},
  }
}
\DeclareOption{surveillance}{%
}
\DeclareOption{organizations}{%
  \DeclareAcronym{UN}{%
    short = {UN},
    long = {United Nations},
  }
  % Surveillance agencies
  \DeclareAcronym{NSA}{%
    short = {NSA},
    long = {US National Security Agency}
  }
  \DeclareAcronym{GCHQ}{%
    short = {GCHQ},
    long = {UK Government Communications Headquarters}
  }
  \DeclareAcronym{CIA}{%
    short = {CIA},
    long = {US Central Intelligence Agency}
  }
  \DeclareAcronym{TAO}{%
    short = {TAO},
    long = {Tailored Access Operations}
  }
  \DeclareAcronym{FRA}{%
    short = {FRA},
    long = {Försvarets radioanstalt},
    foreign = {Swedish National Defence Radio Establishment}
  }
}
\DeclareOption{std}{%
  \ProvideDocumentCommand{\concat}{}{\mathbin{\|}}
  \DeclareAcronym{ICT}{%
    short = {ICT},
    long = {\libbib@capitalize{%
        information and communication technology%
      }},
    long-plural-form = {\libbib@capitalize{%
        information and communication technologies%
      }}
  }
  \DeclareAcronym{PET}{%
    short = {PET},
    long = {\libbib@capitalize{%
        privacy-enhancing technology%
      }},
    long-plural-form = {\libbib@capitalize{%
        privacy-enhancing technologies%
      }}
  }
  \DeclareAcronym{DoS}{%
    short = {DoS},
    long = {\libbib@capitalize{%
        denial-of-service%
      }}
  }
  \DeclareAcronym{APT}{%
    short = {APT},
    short-indefinite = {an},
    long = {\libbib@capitalize{%
        advanced persistent threat%
      }},
    long-indefinite = {an}
  }
  % Types of providers
  \DeclareAcronym{CSP}{%
    short = {CSP},
    long = {\libbib@capitalize{%
        cloud-service provider%
      }}
  }
  \DeclareAcronym{ISP}{%
    short = {ISP},
    long = {\libbib@capitalize{%
        Internet-service provider%
      }}
  }
  % Entities
  \DeclareAcronym{TTP}{%
    short = {TTP},
    long = {\libbib@capitalize{%
        trusted third-party%
      }}
  }
  % Protocols
  \DeclareAcronym{NFC}{%
    short = {NFC},
    long = {Near-Field Communication}
  }
  % World Wide Web
  \DeclareAcronym{WWW}{%
    short = {WWW},
    long = {World-Wide Web}
  }
  \DeclareAcronym{URL}{%
    short = {URL},
    long = {Uniform Resource Locator}
  }
  \DeclareAcronym{URI}{%
    short = {URI},
    long = {Uniform Resource Identifier}
  }
  \DeclareAcronym{URN}{%
    short = {URN},
    long = {Uniform Resource Name}
  }
  % Social Networks
  \DeclareAcronym{OSN}{%
    short = {OSN},
    short-indefinite = {an},
    long = {\libbib@capitalize{%
        online social network%
      }},
    long-indefinite = {an},
  }
  \DeclareAcronym{DOSN}{%
    short = {DOSN},
    long = {\libbib@capitalize{%
        decentralized online social network%
      }}
  }
  \DeclareAcronym{IM}{%
    short = {IM},
    long = {\libbib@capitalize{%
        instant messaging%
      }}
  }
  \DeclareAcronym{TOC}{%
    short = {TOC},
    long = {\libbib@capitalize{%
        table of contents%
      }}
  }
  % Services/protocols
  \DeclareAcronym{GPG}{%
    short = {GPG},
    long = {GNU Privacy Guard},
    cite = {GnuPG}
  }
  \DeclareAcronym{PGP}{%
    short = {PGP},
    long = {Pretty Good Privacy}
  }
  % Models
  \DeclareAcronym{P2P}{%
    short = {P2P},
    long = {\libbib@capitalize{%
        peer-to-peer%
      }}
  }
}
\DeclareOption{distrib}{%
  \DeclareAcronym{DHT}{%
    short = {DHT},
    long = {\libbib@capitalize{%
        distributed hash table%
      }},
  }
}
\ProcessOptions\relax
\endinput
