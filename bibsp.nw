\documentclass[UKenglish]{report}
\usepackage{noweb}
% Needed to relax penalty for breaking code chunks across pages, otherwise 
% there might be a lot of space following a code chunk.
\def\nwendcode{\endtrivlist \endgroup}
\let\nwdocspar=\smallbreak

\usepackage[hyphens]{url}
\usepackage{hyperref}
\usepackage{authblk}

\input{preamble.tex}

\title{%
  bibsp: Bibliographic library for Security and Privacy
}
\author{%
  Daniel Bosk
}
\affil{%
  School of Electrical Engineering and Computer Science\\
  KTH Royal Institute of Technology, Stockholm\\
}
\date{\today}

\begin{document}
\maketitle

\begin{abstract}
  \input{abstract.tex}
\end{abstract}
\clearpage

\tableofcontents
\clearpage

@

\chapter{A framework}


\section{Introduction}%
\label{Intro}

When writing papers on the topic of Security and Privacy, a lot of papers and 
acronyms recur.
As do a lot of TeXnical constructions needed to write.
The bibsp library provides some of these.

We provide a package [[<<bibsp.sty>>]]:
<<bibsp.sty>>=
\NeedsTeXFormat{LaTeX2e}[1999/12/01]
\ProvidesPackage{bibsp}[2018/03/10 v1.0 Bibliographic Security/Privacy Library]
<<required packages>>
<<package options>>
<<main package content>>
\ProcessOptions\relax
\endinput
@

Since the purpose of bibsp is to provide commands for writing documents, we can 
start by including the LaTeX3 xparse package:
<<required packages>>=
\RequirePackage{xparse}
@ This will allow us to easily create commands.
We will also do a lot of mathematical notation, so the following packages will 
be indispensable:
<<required packages>>=
\RequirePackage{amsmath}
\RequirePackage{mleftright}
@ The mleftright package provides "\mleft" and "\mright", which fixes a bug in 
the standard "\left" and "\right" commands.

We also provide a makefile [[<<bibsp.mk>>]] which can be used to easily add 
bibsp as a dependency.
<<bibsp.mk>>=
<<bibsp variables>>
<<bibsp targets>>
<<bibsp includes>>
@ Since we know one file that we will use, [[<<bibsp.sty>>]] above, we can 
provide its desired targets.

When we include [[bibsp.mk]] in a makefile, we want it to provide a local link 
to the directory [[INCLUDE_BIBSP]].
(Note that the current working-directory is where the \emph{including} makefile 
is residing, not in this repo.)
We will do this for many files, so we might as well add a variable to hold all 
the filenames.
We will create a variable [[BIBSP_LINK]] for this purpose, starting with our 
package.
<<bibsp variables>>=
BIBSP_LINK+=  bibsp.sty
@ Now, if such a file exists in the current directory, we don't want to do 
anything.
Otherwise, we want to create a link to it.
<<bibsp targets>>=
${BIBSP_LINK}:
	[ -e "./$@" ] || ln -s ${INCLUDE_BIBSP}/$@ ./$@
@

We must also provide a default value for [[INCLUDE_BIBSP]], in case it is not 
set.
We let the default be the current directory.
<<bibsp variables>>=
INCLUDE_BIBSP?=.
@

We would also like to automate cleaning up these links.
We'd like to do this on [[distclean]] and not on every [[clean]].
Note also that we only want to remove the symbolic links that we have created, 
so we must look for the symbolic links and ignore any other files that happens 
to have the same name.
<<bibsp targets>>=
.PHONY: distclean
distclean: clean-bibsp
clean-bibsp:
	find ${BIBSP_LINK} -type l | xargs ${RM}
@


\section{Publisher-specific options}

We provide settings tailored to some specific publishers.
For now, we provide \DescribeOpt{lncs} for Springer's LNCS series.
<<package options>>=
\DeclareOption{lncs}{%
  <<Springer LNCS option code>>
}
@


\section{Cross referencing}%
\label{Crossrefs}

There is always a need for cross referencing.
Various publishers have different requirements, \eg whether Figure X should be 
referred to as Figure X or Fig.~X, or something else.
The cleveref package is probably the best package available to help us with 
this.
There the target of the reference keeps track of what kind of object itself is.
\Eg we can refer to the introduction of this document using "\cref{Intro}", 
which results in \enquote{\cref{Intro}}.

We generally prefer a compressed notation, so we will load the package with that 
option:
<<required packages>>=
\PassOptionsToPackage{compress}{cleveref}
\RequirePackage{cleveref}
@

Then we provide a package option for the bibsp package to select which 
configuration to use for cleveref.
We currently provide the option \DescribeOpt{lncs}, which sets the values for 
cleveref to what Springer recommends for its LNCS series.
<<Springer LNCS option code>>=
\crefname{chapter}{Chap.}{Chap.}
\Crefname{chapter}{Chapter}{Chapters}
\crefname{section}{Sect.}{Sect.}
\Crefname{section}{Section}{Sections}
\crefname{figure}{Fig.}{Fig.}
\Crefname{figure}{Figure}{Figures}
\crefname{table}{Tab.}{Tab.}
\Crefname{table}{Table}{Tables}
\crefname{definition}{Def.}{Def.}
\Crefname{definition}{Definition}{Definitions}
\crefname{theorem}{Thm.}{Thm.}
\Crefname{theorem}{Theorem}{Theorems}
\crefname{lemma}{Lem.}{Lem.}
\Crefname{lemma}{Lemma}{Lemmas}
\crefname{corollary}{Cor.}{Cor.}
\Crefname{corollary}{Corollary}{Corollaries}
\crefname{proposition}{Prop.}{Prop.}
\Crefname{proposition}{Proposition}{Propositions}
@


\section{Acronyms}%
\label{Acronyms}

We usually make heavy use of acronyms, especially in cryptography.
The probably best available package for handling acronyms is the acro package.

We want to turn some of its features on by default.
If we only use an acronym once, then there is no point in providing an acronym, 
just write it out.
<<required packages>>=
\PassOptionsToPackage{single}{acro}
@

Next, we want the acro package to give us a label for the first occurrence of 
the acronym's use.
<<required packages>>=
\PassOptionsToPackage{label}{acro}
@

Finally, we want to use the mfirstuc package to handle changing letters to upper 
case, \eg when we start a sentence with an acronym using "\Ac{FOO}".
<<required packages>>=
\RequirePackage{mfirstuc-english}
\PassOptionsToPackage{uc-cmd=\makefirstuc}{acro}
@

Now, all that is left is to request the package to be loaded.
<<required packages>>=
\RequirePackage{acro}
@


We provide the \DescribeOpt{lncs} option to have the acronym handling according 
to Springer's requirements for its LNCS series.
<<Springer LNCS option code>>=
\acsetup{uc-cmd=\capitalisewords}
\MFUhyphentrue
\let\ac\Ac
\let\acf\Acf
\let\acl\Acl
\let\acp\Acp
\let\aclp\Aclp
\let\acfp\Acfp
@


\section{Topics framework}%
\label{TopicsFramework}

In addition to providing TeXnical tools, bibsp provides a bibliographic library 
(based on BibTeX and BibLaTeX) covering a variety of topics related to Security 
and Privacy.
We will now describe the framework for how those parts will be presented.

Each topic will provide its own bibliography file (\DescribeFile{topic.bib}).
It will also provide a set of acronyms which might automatically cite the 
relevant papers in the bibliography.
Finally, it might also provide some TeXnical commands to make writing on this 
topic easier.
To add a topic, it must be added to the variable 
\DescribeVar{BIBSP\textunderscore TOPIC} in
[[<<bibsp variables>>]].

We will use the acro package as we did above (\cref{Acronyms}).
We will use the biblatex package for citations.
<<required packages>>=
\RequirePackage{biblatex}
@ Each topic will then add to the following package main content.
<<main package content>>=
<<topic bibliographies>>
<<topic acronyms>>
<<topic commands>>
@ Each entry in [[<<topic bibliographies>>]] should be a "\addbibresource" 
command to add the bibliography to biblatex.
<<requred packages>>=
\RequirePackage{biblatex}
@ [[<<topic acronyms>>]] will contain "\DeclareAcronym" statements for the acro 
package.

Along with each bibliography file ("topic.bib"), each topic should add a 
corresponding makefile, \DescribeFile{topic.mk}.
We want these makefiles to contain URLs to the PDFs or online versions of the 
documents they reference.
We also want to make the bibliography (.bib) files available for inclusion in 
parent projects.
In particular, we want the following.
<<bibsp targets>>=
<<targets for opening paper URLs>>
<<targets for linking bibliographies>>
@

We can start with the latter, [[<<targets for linking bibliographies>>]].
We already provided [[BIBSP_LINK]] above, so we can simply use that.
So, for every topic in the list [[BIBSP_TOPIC]], we simply add its bibliography 
file ("topic.bib") to [[BIBSP_LINK]].
<<targets for linking bibliographies>>=
define bibsp_bibfiles
BIBSP_LINK+=		$(1).bib
endef

$(foreach topic,${BIBSP_TOPIC},$(eval $(call bibsp_bibfiles,${topic})))
@

Now, for each bibliographic entry in "topic.bib", we must add its citation key 
to the list \DescribeVar{BIBSP\textunderscore REFKEY}.
Then we will add the URL of the citation key "refkey" to the variable 
\DescribeVar{URL-refkey}.
Then we can use the list [[BIBSP_REFKEY]] to generate phony targets that will 
open the paper referenced by the citation key.
<<targets for opening paper URLs>>=
define bibsp_display
.PHONY: $(1)
$(1):
	xdg-open ${URL-$(1)}
endef

$(foreach ref,${BIBSP_REFKEY},$(eval $(call bibsp_display,${ref})))
@

Finally, for this to work, we must include all the "topic.mk" files, since 
that's where the [[BIBSP_REFKEY]] variables is populated.
<<bibsp includes>>=
define bibsp_includes
include 		$${INCLUDE_BIBSP}/$(1).mk
endef

$(foreach topic,${BIBSP_TOPIC},$(eval $(call bibsp_includes,${topic})))
@



\chapter{Mathematical notation}

We need to add some mathematical notation that we always use but so far is not 
implemented in any other package.
The things we are interested in are the following.
<<main package content>>=
<<textual shortcuts>>
<<basic sets>>
<<power-set symbol>>
<<algebra>>
@

\paragraph{Textual shortcuts}

We sometimes want to bind equations together textually, \eg
\begin{equation}
  y = f(x) \textand y' = g(x).
\end{equation}
We provide \DescribeMacro{\textand} for this.
The equation above can be produced using
\begin{verbatim}
\begin{equation}
  y = f(x) \textand y' = g(x).
\end{equation}
\end{verbatim}
The command itself is implemented as follows.
<<textual shortcuts>>=
\ProvideDocumentCommand{\textand}{}{\ensuremath{\qquad\text{and}\qquad}}
@


\paragraph{Basic sets}

We need the basic sets for the numbers.
\DescribeMacro{\NN} is used to denote the natural numbers, \ie \(\NN\).
\DescribeMacro{\ZZ} is used for the integers, denoted \(\ZZ\).
\DescribeMacro{\QQ} for the rational numbers, denoted \(\QQ\).
\DescribeMacro{\RR} for the real numbers, denoted \(\RR\).
Finally, \DescribeMacro{\CC} is used for the complex numbers, denoted \(\CC\).

These commands are simply implemented as follows:
<<basic sets>>=
\DeclareMathOperator{\NN}{\mathbb{N}}
\DeclareMathOperator{\ZZ}{\mathbb{Z}}
\DeclareMathOperator{\QQ}{\mathbb{Q}}
\DeclareMathOperator{\RR}{\mathbb{R}}
\DeclareMathOperator{\CC}{\mathbb{C}}
@


We provide \DescribeMacro{\card}\marg{set} to denote the cardinality of a set, 
\eg "\card A" yields \(\card{A}\).
This command is implemented as follows.
<<basic sets>>=
\ProvideDocumentCommand{\card}{m}{\ensuremath{|#1|}}
@

\paragraph{The power-set symbol}

Some packages defines the power-set symbol, \(\powerset\), achieved by 
\DescribeMacro{\powerset}.
However, many do not, but we still want to have it accessible.
<<power-set symbol>>=
\ifdefined\powerset%
  \relax%
\else%
  \DeclareMathOperator{\powerset}{\mathscr{P}}%
\fi
@

We will use the font from the euscript package:
<<required packages>>=
\PassOptionsToPackage{mathscr}{euscript}
\RequirePackage{euscript}
@

\paragraph{Algebra}

We also use a lot of algebraic notation in cryptography, \eg fields and 
generators of groups.
We provide \DescribeMacro{\GF} to denote \(\GF\), \ie the Galois field.
Or \DescribeMacro{\FF} for \(\FF\) to denote a field.

We also provide \DescribeMacro{\ord} to denote the order of a group by \(\ord\).
And \DescribeMacro{\gen}\marg{generator} to denote the group \(\gen g\) 
generated by the generator \(g\).

The above commands are implemented as follows.
<<algebra>>=
\DeclareMathOperator{\GF}{\mathrm{GF}}
\DeclareMathOperator{\FF}{\mathbb{F}}
\DeclareMathOperator{\ord}{ord}
\ProvideDocumentCommand{\gen}{m}{\mleft\langle #1\mright\rangle}
@



\chapter{Protocols}

There are two things we want concerning protocols.
First, we want a shorthand notation for two entities participating in an 
interactive protocol.
Second, we want to provide easy access to arrows for protocol diagrams, using 
the tabular environment.
In summary, we provide the following:
<<topic commands>>=
<<protocol notation>>
<<protocol diagram arrows>>
<<string concatenation>>
@

We usually concatenate strings in protocols, we provide the concatenation 
operator \DescribeMacro{\concat}.
"A\concat B" results in \(A\concat B\).
<<string concatenation>>=
\ProvideDocumentCommand{\concat}{}{\mathbin{\|}}
@

\paragraph{Protocol notation}

We have two \acp{PPTM}, \(A\) and \(B\), who participate in an interactive 
protocol with each other.
We denote this as \(\Proto{A}{B}\).
This can be achieved with the provided \DescribeMacro{\Proto} command, 
specifically "\Proto{A}{B}" or "\Proto A B" produces \(\Proto{A}{B}\).

This is implemented as follows.
<<protocol notation>>=
\ProvideDocumentCommand{\Proto}{m m}{\ensuremath{%
    \mleft\langle%
    #1; #2%
    \mright\rangle%
  }}
@

\paragraph{Protocol diagrams}

We often want to create protocol diagrams.
There are a few packages, \eg the [[msc]] and [[cryptocode]] packages.
However, it's usually easier to work with the tabular environment.
But we would like to have some semantic commands for sending messages back and 
forth.

We provide \DescribeMacro{\ProtoSendLeft} and \DescribeMacro{\ProtoSendRight} to 
have semantic names for the arrows in protocols figures, \eg 
\cref{ProtocolFigure}.
\Cref{ProtocolFigure} is implemented with the following code:
\begin{verbatim}
\begin{figure}
  \centering
  \begin{tabular}{lcl}
  \(A(x, q)\) & & \(B(y, q)\) \\
  \toprule

  \(r\gets \ZZ_q\)
  & \(\ProtoSendLeft{r}\)
  &
  \\

  % null
  & \(\ProtoSendRight{c}\)
  & \(c\gets \ZZ_q\)
  \\

  % null
  & \ProtoSendLeft[1em]{y}
  &
  \\

  \bottomrule
  \end{tabular}
  \caption{%
    The interactive protocol \(\Proto{A(x)}{B(y)}(q)\) between algorithm \(A\) 
    with private input \(x\) and algorithm \(B\) with private input \(y\) and 
    common input \(q\).
  }\label{ProtocolFigure}
\end{figure}
\end{verbatim}

\begin{figure}
  \centering
  \begin{tabular}{lcl}
  \(A(x, q)\) & & \(B(y, q)\) \\
  \toprule

  \(r\gets \ZZ_q\)
  & \(\ProtoSendLeft{r}\)
  &
  \\

  % null
  & \(\ProtoSendRight{c}\)
  & \(c\gets \ZZ_q\)
  \\

  % null
  & \ProtoSendLeft[1em]{y}
  &
  \\

  \bottomrule
  \end{tabular}
  \caption{%
    The interactive protocol \(\Proto{A(x)}{B(y)}(q)\) between algorithm \(A\) 
    with private input \(x\) and algorithm \(B\) with private input \(y\) and 
    common input \(q\).
  }\label{ProtocolFigure}
\end{figure}

The default length of the arrow is set by the length 
\DescribeMacro{\ProtoArrowLength}.
However, each "\ProtoSendLeft" or "\ProtoSendRight" can be provided with an 
optional argument, which is a length and overrides the setting of 
"\ProtoArrowLength" (see the last line of \cref{ProtocolFigure}).

The commands are implemented as follows.
<<protocol diagram arrows>>=
\newlength{\ProtoArrowLength}
\setlength{\ProtoArrowLength}{0.15\linewidth}
\ProvideDocumentCommand{\ProtoSendRight}{o m}{\ensuremath{%
    \IfValueTF{#1}%
    {\xrightarrow[\hspace{#1}]{#2}}%
    {\xrightarrow[\hspace{\ProtoArrowLength}]{#2}}%
  }}
\ProvideDocumentCommand{\ProtoSendLeft}{o m}{\ensuremath{%
    \IfValueTF{#1}%
    {\xleftarrow[\hspace{#1}]{#2}}%
    {\xleftarrow[\hspace{\ProtoArrowLength}]{#2}}%
  }}
@



\chapter{Cryptography}

The topic of cryptography is a very big one.
It provides the following subtopics.
<<bibsp variables>>=
BIBSP_TOPIC+=   crypto
BIBSP_TOPIC+=   be
BIBSP_TOPIC+=   mpc
@


\section{Algorithmic notation}

When doing applied cryptography, we must use several schemes at the same time.
A useful notation is that of classes and methods.
\NewCryptoScheme{\SchemeS}{S}
Say that we have two schemes \(\SchemeS, \SchemeS*\).
\NewAlgorithm{\Sign}{Sign}
Also say that each of these schemes provide a signature algorithm, \(\Sign\).
Then we can differentiate between them by the notation \(\SchemeS[\Sign]\) and 
\(\SchemeS*[\Sign]\).

We provide a command \DescribeMacro{\NewCryptoScheme}\marg{macro}\marg{name} 
which creates a command \cs{\meta{macro}}.
\Eg the schemes \(\SchemeS, \SchemeS*\) were generated using
\begin{center}
"\NewCryptoScheme{\SchemeS}{S}"
\end{center}
and \cmd{\SchemeS} produces \(\SchemeS\) and \(\cmd{\SchemeS*}\) produces 
\(\SchemeS*\).
Each scheme macro accepts an optional star (to give it the overline) and an 
optional argument interpreted as a method, \eg "\SchemeS[\Sign]" produces 
\(\SchemeS[\Sign]\).
The "\NewCryptoScheme" command is implemented as follows:
<<topic commands>>=
\ProvideDocumentCommand{\NewCryptoScheme}{m m}{%
  \ProvideDocumentCommand{#1}{s o}{%
    \ensuremath{%
      \operatorname{%
        \IfBooleanTF{##1}{%
          \overline{{\mathsf{#2}}}%
        }{%
          {\mathsf{#2}}%
        }%
      }%
      \IfValueT{##2}{\!.\!##2}%
    }%
  }%
}
@

We also provide \DescribeMacro{\method}\marg{class}\marg{method} to simply 
provide a nice method notation between \meta{class} and \meta{method}.
The result will be treated as a mathematical operator.
<<topic commands>>=
\ProvideDocumentCommand{\method}{m m}{\ensuremath{%
    \operatorname{#1.\!#2}%
  }}
@

The algorithm \(\Sign\) was produced using 
\DescribeMacro{\NewAlgorithm}\marg{macro}\marg{name}, more specifically,
\begin{center}
"\NewAlgorithm{\Sign}{Sign}".
\end{center}
Analogous to algorithms, we also provide \DescribeMacro{\NewFunction} for 
mathematical functions, the only difference lies in the typeface.
An algorithm (or function) command, takes an optional star and then two optional 
arguments:
\begin{center}
\cs{\meta{macro}}\oarg{sub/supscripts}\oarg{argument}.
\end{center}
If only one optional argument is given, it's interpreted as the \meta{argument}.

The "\NewAlgorithm" and "\NewFunction" are implemented as follows.
<<topic commands>>=
\ProvideDocumentCommand{\NewAlgorithm}{m m}{%
  \ProvideDocumentCommand{#1}{s o o}{%
    \ensuremath{%
      \operatorname{%
        \IfBooleanTF{##1}{%
          \overline{\mathsf{#2}}%
        }{%
          \mathsf{#2}%
        }%
      }%
      \IfValueTF{##3}{%
        ##2%
        \mleft(##3\mright)%
      }{%
        \IfValueT{##2}{\mleft(##2\mright)}%
      }%
    }%
  }%
}
\ProvideDocumentCommand{\NewFunction}{m m}{%
  \ProvideDocumentCommand{#1}{s o o}{%
    \ensuremath{%
      \operatorname{%
        \IfBooleanTF{##1}{%
          \overline{#2}%
        }{%
          #2%
        }%
      }%
      \IfValueTF{##3}{%
        ##2%
        \mleft(##3\mright)%
      }{%
        \IfValueT{##2}{\mleft(##2\mright)}%
      }%
    }%
  }%
}
@

Finally, we provide two commands for creating macros representing sets or other 
cryptographic entities, \eg adversarial algorithms.
\DescribeMacro{\NewCryptoSet}\marg{macro}\marg{name} (and 
\DescribeMacro{\NewCryptoEntity}\marg{macro}\marg{name}) takes two arguments, 
one the name of the macro and the second the display name.
The resulting \cs{\meta{macro}} doesn't take any options.
<<topic commands>>=
\ProvideDocumentCommand{\NewCryptoSet}{m m}{%
  \ProvideDocumentCommand{#1}{}{%
    \ensuremath{\mathcal{#2}}%
  }%
}
\ProvideDocumentCommand{\NewCryptoEntity}{m m}{%
  \ProvideDocumentCommand{#1}{}{%
    \ensuremath{\mathcal{#2}}%
  }%
}
@

<<topic acronyms>>=
\DeclareAcronym{PPT}{%
  short = {PPT},
  long = {probabilistic polynomial-time},
}
\DeclareAcronym{PPTM}{%
  short = {PPTM},
  long = {probabilitstic polynomial-time Turing machine},
}
@

<<topic acronyms>>=
\DeclareAcronym{PRP}{%
  short = {PRP},
  long = {%
      pseudo-random permutation%
    }
}
\DeclareAcronym{PRF}{%
  short = {PRF},
  long = {%
      pseudo-random function%
    }
}
\DeclareAcronym{VRF}{%
  short = {VRF},
  long = {verifiable random function},
}
@


\section{Proofs of knowledge}

<<topic commands>>=
\ProvideDocumentCommand{\PK}{o o}{\ensuremath{%
    \operatorname{PK}%
    \IfValueT{#1}{%
      \IfValueTF{#2}{%
        \mleft\{\mleft(#1\mright) : #2\mright\}%
      }{%
        \mleft\{#1\mright\}%
      }%
    }%
  }}
\ProvideDocumentCommand{\SPK}{o o o}{\ensuremath{%
    \operatorname{SPK}%
    \IfValueT{#1}{%
      \IfValueTF{#2}{%
        \mleft\{\mleft(#1\mright) : #2\mright\}%
      }{%
        \mleft\{#1\mright\}%
      }%
      \IfValueT{#3}{%
        \mleft(#3\mright)%
      }%
    }%
  }}
@

<<topic acronyms>>=
\DeclareAcronym{ZKP}{%
  short = {ZKP},
  long = {zero-knowledge proof},
}
\DeclareAcronym{PK}{%
  short = {PK},
  long = {proof of knowledge},
}
\DeclareAcronym{ZKPK}{%
  short = {ZKPK},
  long = {zero-knowledge proof of knowledge},
}
\DeclareAcronym{NIZK}{%
  short = {NIZK},
  long = {non-interactive zero-knowledge},
}
@


\chapter{Authentication}

<<bibsp variables>>=
BIBSP_TOPIC+=   auth
@

We provide references in [[<<auth.bib>>]] and add it to biblatex for inclusion.
<<topic bibliographies>>=
\addbibresource{auth.bib}
@

\DescribeAcro{eID}
\DescribeAcro{PKI}
\DescribeAcro{CA}
<<topic acronyms>>=
\DeclareAcronym{eID}{%
  short = {eID},
  short-indefinite = {an},
  long = {electronic ID},
  long-indefinite = {an},
}
\DeclareAcronym{PKI}{%
  short = {PKI},
  long = {public-key infrastructure},
}
\DeclareAcronym{CA}{%
  short = {CA},
  long = {certificate authority},
}
@


\section{Passwords}

<<bibsp variables>>=
BIBSP_TOPIC+=   passwd
@

We add the password bibliography for automatic inclusion by [[bibsp]].
<<topic bibliographies>>=
\addbibresource{passwd.bib}
@

The first paper treats security and usability of password composition policies.
We first add the BibTeX entry.
<<passwd.bib>>=
@@inproceedings{OfPasswordsAndPeople,
  author={Komanduri, Saranga and
    Shay, Richard and
    Kelley, Patrick Gage and
    Mazurek, Michelle L. and
    Bauer, Lujo and
    Christin Nicolas and
    Cranor, Lorrie Faith and
    Egelman, Serge},
  title={Of passwords and people:
    Measuring the effect of password-composition policies},
  booktitle={CHI},
  year={2011},
  URL={http://cups.cs.cmu.edu/rshay/pubs/passwords_and_people2011.pdf},
}
@ And then provide the citation key and the paper's \ac{URL} so that we can 
automatically fetch the paper.
<<passwd.mk>>=
BIBSP_REFKEY+=OfPasswordsAndPeople
URL-OfPasswordsAndPeople=http://cups.cs.cmu.edu/rshay/pubs/passwords_and_people2011.pdf
@

The second paper is a follow-up to the first.
<<passwd.bib>>=
@@inproceedings{CanLongPasswordsBeSecureAndUsable,
  title={Can long passwords be secure and usable?},
  author={Shay, Richard and
    Komanduri, Saranga and
    Durity, Adam L and
    Huh, Phillip Seyoung and
    Mazurek, Michelle L and
    Segreti, Sean M and
    Ur, Blase and
    Bauer, Lujo and
    Christin, Nicolas and
    Cranor, Lorrie Faith},
  booktitle={Proceedings of the 32nd annual ACM conference on Human factors in 
    computing systems},
  pages={2927--2936},
  year={2014},
  organization={ACM},
  URL={http://lorrie.cranor.org/pubs/longpass-chi2014.pdf},
}
@ Now the citation key and \ac{URL}.
<<passwd.mk>>=
BIBSP_REFKEY+=CanLongPasswordsBeSecureAndUsable
URL-CanLongPasswordsBeSecureAndUsablp=http://lorrie.cranor.org/pubs/longpass-chi2014.pdf
@


\section{Distance bounding}

<<topic acronyms>>=
\DeclareAcronym{DB}{%
  short = {DB},
  long = {distance bounding},
  cite = {DistanceBounding},
}

\DeclareAcronym{DBMF}{%
  short = {MF},
  short-indefinite = {an},
  long = {Mafia fraud},
  cite = {MafiaFraud},
}
\DeclareAcronym{DBDF}{%
  short = {DF},
  long = {distance fraud},
  cite = {DistanceBounding},
}
\DeclareAcronym{DBDH}{%
  short = {DH},
  long = {distance hijacking},
  cite = {DistanceHijacking},
}
\DeclareAcronym{DBTF}{%
  short = {TF},
  long = {terrorist fraud},
  cite = {TerroristFraud},
}
\DeclareAcronym{DBIF}{%
  short = {IF},
  short-indefinite = {an},
  long = {impersonation fraud},
  long-indefinite = {an},
  cite = {ImpersonationFraud},
}
\DeclareAcronym{DBIV}{%
  short = {IV},
  short-indefinite = {an},
  long = {impersonating verifier},
  long-indefinite = {an},
  %cite = {PRIVO},
}

\DeclareAcronym{DBPK}{%
  short = {DBPK},
  long = {distance-bounding proof-of-knowledge},
}
@


\section{Location-based services}

<<bibsp variables>>=
BIBSP_TOPIC+=   location
@

<<topic acronyms>>=
\DeclareAcronym{PROPS}{%
  short = {PROPS},
  long = {PRivacy-preserving lOcation-Proof System},
  cite = {PROPS},
}
\DeclareAcronym{LP}{%
  short = {LP},
  short-indefinite = {an},
  long = {%
      location proof%
    },
  long-indefinite = {a},
}
\DeclareAcronym{LPS}{%
  short = {LPS},
  short-indefinite = {an},
  long = {%
      location-proof share%
    },
  long-indefinite = {a},
}
@




\chapter{Access control}

<<bibsp variables>>=
BIBSP_TOPIC+=   ac
@

<<topic acronyms>>=
\DeclareAcronym{AC}{%
  short = {AC},
  long = {access control},
  short-indefinite = {an},
  long-indefinite = {an},
}
\DeclareAcronym{DAC}{%
  short = {DAC},
  long = {discretionary access control}
}
\DeclareAcronym{acMAC}{%
  short = {MAC},
  long = {mandatory access control}
}
@

\section{Access-control models}

<<topic acronyms>>=
\DeclareAcronym{IBAC}{%
  short = {IBAC},
  long = {identity-based access control},
  short-indefinite = {an},
  long-indefinite = {an},
}
\DeclareAcronym{RBAC}{%
  short = {RBAC},
  long = {role-based access control},
  short-indefinite = {an},
  long-indefinite = {a},
  %cite = {RBAC},
}
\DeclareAcronym{ABAC}{%
  short = {ABAC},
  long = {attribute-based access control},
  short-indefinite = {an},
  long-indefinite = {an},
  %cite = {ABAC},
}
@

<<topic acronyms>>=
\DeclareAcronym{ACL}{%
  short = {ACL},
  long = {access-control list},
  short-indefinite = {an},
  long-indefinite = {an},
}
@

\section{Information flow}

<<topic acronyms>>=
\DeclareAcronym{IFC}{%
  short = {IFC},
  short-indefinite = {an},
  long = {information-flow control},
  long-indefinite = {an},
}
\DeclareAcronym{BLP}{%
  short = {BLP},
  long = {Bell-LaPadula},
  cite = {Bell-LaPadula}
}
@


\appendix

\chapter{Undocumented}

<<bibsp variables>>=
BIBSP_TOPIC+=	anon
BIBSP_TOPIC+=	privacy meta surveillance hr
BIBSP_TOPIC+=	protests voting
BIBSP_TOPIC+=	osn
BIBSP_TOPIC+=	reputation
BIBSP_TOPIC+=	stats
BIBSP_TOPIC+=	blockchain depend
BIBSP_TOPIC+=	nfc
BIBSP_TOPIC+=	adhocnets
BIBSP_TOPIC+=	ecurrency

BIBSP_TOPIC+=	otrmsg otpkx ppes
@

<<required packages>>=
\RequirePackage{textcomp}
\RequirePackage{ifthen}
@

<<topic acronyms>>=
%%%%%%%%%%%%%%%%%%%%%%%%
% Organizations
%%%%%%%%%%%%%%%%%%%%%%%%
\DeclareAcronym{UN}{%
  short = {UN},
  long = {United Nations},
}
% Surveillance agencies
\DeclareAcronym{NSA}{%
  short = {NSA},
  long = {US National Security Agency}
}
\DeclareAcronym{GCHQ}{%
  short = {GCHQ},
  long = {UK Government Communications Headquarters}
}
\DeclareAcronym{CIA}{%
  short = {CIA},
  long = {US Central Intelligence Agency}
}
\DeclareAcronym{TAO}{%
  short = {TAO},
  long = {Tailored Access Operations}
}
\DeclareAcronym{FRA}{%
  short = {FRA},
  long = {Försvarets radioanstalt},
  foreign = {Swedish National Defence Radio Establishment}
}

%%%%%%%%%%%%%%%%%%%%%
% Standard things
%%%%%%%%%%%%%%%%%%%%%
\DeclareAcronym{PET}{%
  short = {PET},
  long = {%
      privacy-enhancing technology%
    },
  long-plural-form = {%
      privacy-enhancing technologies%
    }
}
\DeclareAcronym{DoS}{%
  short = {DoS},
  long = {%
      denial-of-service%
    }
}
\DeclareAcronym{DDoS}{%
  short = {DDoS},
  long = {%
      distributed denial-of-service%
    }
}
\DeclareAcronym{APT}{%
  short = {APT},
  short-indefinite = {an},
  long = {%
      advanced persistent threat%
    },
  long-indefinite = {an}
}
% Types of providers
\DeclareAcronym{CSP}{%
  short = {CSP},
  long = {%
      cloud-service provider%
    }
}
\DeclareAcronym{ISP}{%
  short = {ISP},
  long = {%
      Internet-service provider%
    }
}
% Entities
\DeclareAcronym{TTP}{%
  short = {TTP},
  long = {%
      trusted third-party%
    }
}

\DeclareAcronym{TOC}{%
  short = {TOC},
  long = {%
      table of contents%
    }
}

@

\section{Encryption/decryption}

<<topic commands>>=
\ProvideDocumentCommand{\indcpa}{}{\ensuremath{\text{IND-CPA}}}
\ProvideDocumentCommand{\indcca}{}{\ensuremath{\text{IND-CCA}}}
\ProvideDocumentCommand{\indsfcca}{}{\ensuremath{\text{IND-SFCCA}}}
\ProvideDocumentCommand{\intptxt}{}{\ensuremath{\text{INT-PTXT}}}
\ProvideDocumentCommand{\intctxt}{}{\ensuremath{\text{INT-CTXT}}}
\ProvideDocumentCommand{\intsfctxt}{}{\ensuremath{\text{INT-SFCTXT}}}
\ProvideDocumentCommand{\nmcpa}{}{\ensuremath{\text{NM-CPA}}}
\ProvideDocumentCommand{\nmcca}{}{\ensuremath{\text{NM-CCA}}}
\ProvideDocumentCommand{\sufcma}{}{\ensuremath{\text{SUF-CMA}}}
\ProvideDocumentCommand{\denss}{}{\ensuremath{\text{DEN-SS}}}
\ProvideDocumentCommand{\rgets}{}{\overset{\text{\textcent}}{\gets}}
%\DeclareMathOperator{\AdvOp}{\mathbf{Adv}}
%\ProvideDocumentCommand{\Adv}{m m o}{%
%  \IfValueTF{#3}{%
%    \ensuremath{\AdvOp^{#1}_{#2}\mleft( #3 \mright)}%
%  }{%
%    \ensuremath{\AdvOp^{#1}_{#2}\mleft( \cdot \mright)}%
%  }%
%}
%\DeclareMathOperator{\ExpOp}{\mathbf{Exp}}
%\ProvideDocumentCommand{\Exp}{m m o}{%
%  \IfValueTF{#3}{%
%    \ensuremath{\ExpOp^{#1}_{#2}\mleft( #3 \mright)}%
%  }{%
%    \ensuremath{\ExpOp^{#1}_{#2}\mleft( \cdot \mright)}%
%  }%
%}
\ProvideDocumentCommand{\Key}{s m}{\ensuremath{%
  \IfBooleanT{#1}{\hat}k%
  %\IfValueT{#2}{^{#2}}%
  \ifthenelse{\equal{#2}{}}{}{_{#2}}%
}}
\ProvideDocumentCommand{\PubKey}{s m}{\ensuremath{%
  \IfBooleanT{#1}{\hat}pk%
  \ifthenelse{\equal{#2}{}}{}{_{#2}}%
}}
\ProvideDocumentCommand{\PriKey}{s m}{\ensuremath{%
  \IfBooleanT{#1}{\hat}sk%
  \ifthenelse{\equal{#2}{}}{}{_{#2}}%
}}
\ProvideDocumentCommand{\MACKey}{s m}{\ensuremath{%
  \IfBooleanT{#1}{\hat}k%
  \ifthenelse{\equal{#2}{}}{}{_{#2}}%
  ^{\mathsf{MA}}%
}}
\ProvideDocumentCommand{\TagKey}{s m}{\ensuremath{%
  \IfBooleanT{#1}{\hat}k%
  \ifthenelse{\equal{#2}{}}{}{_{#2}}%
  ^{\mathsf{MA}}%
}}
\ProvideDocumentCommand{\SignKey}{s m}{\ensuremath{%
  \IfBooleanT{#1}{\hat}sk%
  \ifthenelse{\equal{#2}{}}{}{_{#2}}%
}}
\ProvideDocumentCommand{\VerifKey}{s m}{\ensuremath{%
  \IfBooleanT{#1}{\hat}vk%
  \ifthenelse{\equal{#2}{}}{}{_{#2}}%
}}

% Crypto properties
\DeclareAcronym{IND-CPA}{%
  short = {IND-CPA},
  long = {indistinguishability under chosen-plaintext attack},
  cite = {AuthEncryption}
}
\DeclareAcronym{IND-CCA}{%
  short = {IND-CCA},
  long = {indistinguishability under chosen-ciphertext attack},
  cite = {AuthEncryption}
}
\DeclareAcronym{IND-SFCCA}{%
  short = {IND-SFCCA},
  long = {indistinguishability under statefully chosen-ciphertext attack},
  cite = {StatefulDecryption}
}
\DeclareAcronym{WUF-CMA}{%
  short = {WUF-CMA},
  long = {weak unforgeability under chosen-message attack},
  cite = {AuthEncryption}
}
\DeclareAcronym{SUF-CMA}{%
  short = {SUF-CMA},
  long = {strong unforgeability under chosen-message attack},
  cite = {AuthEncryption}
}
\DeclareAcronym{INT-PTXT}{%
  short = {INT-PTXT},
  long = {integrity of plaintexts},
  cite = {AuthEncryption}
}
\DeclareAcronym{INT-SFPTXT}{%
  short = {INT-SFPTXT},
  long = {integrity of stateful plaintexts},
  cite = {StatefulDecryption}
}
\DeclareAcronym{INT-CTXT}{%
  short = {INT-CTXT},
  long = {integrity of ciphertexts},
  cite = {AuthEncryption}
}
\DeclareAcronym{INT-SFCTXT}{%
  short = {INT-SFCTXT},
  long = {integrity of stateful ciphertexts},
  cite = {StatefulDecryption}
}
\DeclareAcronym{DEN-SS}{%
  short = {DEN-SS},
  long = {deniability under surveillance-state attack},
  cite = {OTPKX}
}
% Computational problems
\DeclareAcronym{DLP}{%
  short = {DLP},
  long = {Discrete Logarithm Problem}
}
\DeclareAcronym{DH}{
  short = {DH},
  long = {Diffie-Hellman},
  cite = {DiffieHellman}
}
\DeclareAcronym{DHP}{%
  short = {DHP},
  long = {Diffie-Hellman Problem},
  cite = {DiffieHellman}
}
\DeclareAcronym{DDH}{%
  short = {DDH},
  long = {Decisional Diffie-Hellman},
  cite = {DiffieHellman}
}
\DeclareAcronym{DC}{%
  short = {DC},
  long = {Dining Cryptographers},
  cite = {DiningCryptographers}
}
\DeclareAcronym{DCP}{%
  short = {DCP},
  long = {Dining Cryptographers Problem},
  cite = {DiningCryptographers}
}
\DeclareAcronym{SMP}{%
  short = {SMP},
  long = {Socialist Millionaires' Problem}
}
% Cryptographic mechanisms
\DeclareAcronym{OTP}{%
  short = {OTP},
  long = {One-Time Pad}
}
\DeclareAcronym{MA}{%
  short = {MA},
  long = {%
      message authentication%
    }
}
\DeclareAcronym{MAC}{%
  short = {MAC},
  long = {%
      message-authentication code%
    }
}
\DeclareAcronym{HMAC}{%
  short = {HMAC},
  short-indefinite = {an},
  long = {%
      hash-based message-authentication code%
    },
  long-indefinite = {a},
  cite = {HMAC},
}
\DeclareAcronym{PRNG}{%
  short = {PRNG},
  long = {%
      pseudo-random number-generator%
    }
}
\DeclareAcronym{RNG}{%
  short = {RNG},
  long = {%
      random-number generator%
    }
}
\DeclareAcronym{KEM}{%
  short = {KEM},
  long = {%
      key-encapsulation mechanism%
    }
}
\DeclareAcronym{DEM}{%
  short = {DEM},
  long = {%
      data-encryption mechanism%
    }
}
\DeclareAcronym{EtM}{%
  short = {EtM},
  long = {%
      encrypt-then-MAC
    },
  cite = {AuthEncryption}
}
\DeclareAcronym{PIR}{%
  short = {PIR},
  long = {%
      private information retrieval%
    },
  %cite = {PIR}
}
\DeclareAcronym{OT}{%
  short = {OT},
  short-indefinite = {an},
  long = {%
      oblivious transfer%
    },
  long-indefinite = {an},
  cite = {ObliviousTransfer}
}
% Key-exchange mechanisms
\DeclareAcronym{KE}{%
  short = {KE},
  long = {%
      key-exchange%
    }
}
\DeclareAcronym{DHKE}{%
  short = {DHKE},
  long = {%
      Diffie-Hellman key-exchange%
    },
  cite = {DiffieHellman}
}
\DeclareAcronym{AKE}{%
  short = {AKE},
  long = {%
      authenticated key-exchange
    },
  cite = {AuthKeyExchange}
}
% Cryptographic properties
\DeclareAcronym{PFS}{%
  short = {PFS},
  long = {%
      perfect forward-secrecy%
    }
}
% Types of encryption
\DeclareAcronym{PKC}{%
  short = {PKC},
  long = {%
      public-key cryptography%
    }
}
\DeclareAcronym{PKE}{%
  short = {PKE},
  long = {%
      public-key encryption%
    }
}
\DeclareAcronym{SKE}{%
  short = {SKE},
  long = {%
      symmetric-key encryption%
    }
}
\DeclareAcronym{BE}{%
  short = {BE},
  long = {%
      broadcast encryption%
    },
  cite = {BroadcastEncryption}
}
\DeclareAcronym{ANOBE}{%
  short = {ANOBE},
  short-indefinite = {an},
  long = {%
      anonymous broadcast encryption%
    },
  long-indefinite = {an},
  cite = {ANOBE}
}
\DeclareAcronym{oANOBE}{%
  short = {oANOBE},
  long = {%
      outsider-anonymous broadcast encryption%
    },
  cite = {oANOBE}
}
\DeclareAcronym{IBE}{%
  short = {IBE},
  long = {%
      identity-based encryption%
    }
}
\DeclareAcronym{ABE}{%
  short = {ABE},
  long = {%
      attribute-based encryption%
    },
  short-indefinite = {an},
  long-indefinite = {an},
}
\DeclareAcronym{CP-ABE}{%
  short = {CP-ABE},
  long = {%
      ciphertext-policy attribute-based encryption%
    },
  cite = {CP-ABE}
}
\DeclareAcronym{KP-ABE}{%
  short = {KP-ABE},
  long = {%
      key-policy attribute-based encryption%
    },
  cite = {KP-ABE},
}
\DeclareAcronym{PE}{%
  short = {PE},
  long = {%
      predicate encryption%
    }
}
\DeclareAcronym{PRE}{%
  short = {PRE},
  long = {%
      proxy re-encryption%
    },
  cite = {AtomicProxyCrypto}
}
\DeclareAcronym{FHE}{%
  short = {FHE},
  long = {%
      fully homomorphic encryption%
    },
}
\DeclareAcronym{SHE}{%
  short = {SHE},
  long = {%
      somewhat homomorphic encryption%
    },
}
\DeclareAcronym{SHA}{%
  short = {SHA},
  long = {Secure Hash Algorithm},
  cite = {SHA},
}
% Protocols
\DeclareAcronym{OTR}{%
  short = {OTR},
  long = {Off-the-Record},
  cite = {otr2004}
}
% Anonymity
\DeclareAcronym{DP}{%
  short = {DP},
  long = {differential privacy},
  cite = {DifferentialPrivacy},
}

%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Multi-party computation
%%%%%%%%%%%%%%%%%%%%%%%%%%%
\DeclareAcronym{MPC}{%
  short = {MPC},
  short-indefinite = {an},
  long = {%
      secure multiparty computation%
    },
  long-indefinite = {a},
}
\DeclareAcronym{SMC}{%
  short = {MPC},
  short-indefinite = {an},
  long = {%
      secure multiparty computation%
    },
  long-indefinite = {a},
}
@





\chapter{Blockchains}

<<topic acronyms>>=
\DeclareAcronym{tposet}{%
  short = {t-poset},
  long = {transactional partially ordered set},
  cite = {BlockchainFreeCryptocurrencies},
}
@



\chapter{Computer systems}

<<topic acronyms>>=
\DeclareAcronym{IO}{%
  short = {I/O},
  short-indefinite = {an},
  long = {input/output},
  long-indefinite = {an},
}
\DeclareAcronym{CPU}{%
  short = {CPU},
  long = {central processing unit},
}
\DeclareAcronym{OS}{%
  short = {OS},
  long = {operating system},
}
\DeclareAcronym{FS}{%
  short = {FS},
  short-indefinite = {an},
  long = {file system},
  long-indefinite = {a},
}
\DeclareAcronym{DRM}{%
  short = {DRM},
  long = {digital rights management},
}
\DeclareAcronym{ICT}{%
  short = {ICT},
  long = {information and communication technology},
  long-plural-form = {information and communication technologies},
}
@



\chapter{Services}

<<topic acronyms>>=
\DeclareAcronym{GPG}{%
  short = {GPG},
  long = {GNU Privacy Guard},
  cite = {GnuPG}
}
\DeclareAcronym{PGP}{%
  short = {PGP},
  long = {Pretty Good Privacy},
}
\DeclareAcronym{OSN}{%
  short = {OSN},
  short-indefinite = {an},
  long = {online social network},
  long-indefinite = {an},
}
\DeclareAcronym{DOSN}{%
  short = {DOSN},
  long = {decentralized online social network},
}
\DeclareAcronym{SNS}{%
  short = {SNS},
  long = {socal-network service},
}
\DeclareAcronym{IM}{%
  short = {IM},
  long = {instant messaging},
}
\DeclareAcronym{NFC}{%
  short = {NFC},
  long = {Near-Field Communication}
}
% World Wide Web
\DeclareAcronym{WWW}{%
  short = {WWW},
  long = {World-Wide Web}
}
\DeclareAcronym{URL}{%
  short = {URL},
  long = {Uniform Resource Locator}
}
\DeclareAcronym{URI}{%
  short = {URI},
  long = {Uniform Resource Identifier}
}
\DeclareAcronym{URN}{%
  short = {URN},
  long = {Uniform Resource Name}
}
@



\chapter{Peer-to-peer systems}

<<topic acronyms>>=
\DeclareAcronym{P2P}{%
  short = {P2P},
  long = {peer-to-peer},
}
\DeclareAcronym{DHT}{%
  short = {DHT},
  long = {distributed hash-table},
}
@



\chapter{Usability}

<<topic acronyms>>=
\DeclareAcronym{HCI}{%
  short = {HCI},
  short-indefinite = {an},
  long = {human--computer interaction},
}
\DeclareAcronym{UI}{%
  short = {UI},
  long = {user-interface},
}
\DeclareAcronym{UX}{%
  short = {UX},
  long = {user-experience},
}
@



\printbibliography

\chapter*{An index of the code blocks}
\nowebchunks

\printindex
\end{document}
